<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="sa.service.ValidatorServiceTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-12-04T15:42:24" hostname="DESKTOP-HKC31JI" time="1.123">
  <properties/>
  <testcase name="validate()" classname="sa.service.ValidatorServiceTest" time="1.123"/>
  <system-out><![CDATA[00:42:17.462 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [sa.service.ValidatorServiceTest]: ValidatorServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
00:42:17.604 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration sa.SpringPaymentApplication for test class sa.service.ValidatorServiceTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.0)

2024-12-05T00:42:18.195+09:00  INFO 12740 --- [    Test worker] sa.service.ValidatorServiceTest          : Starting ValidatorServiceTest using Java 17.0.4.1 with PID 12740 (started by user in C:\Users\user\Desktop\UnifiedDeliveryService\project\SoftwareArchitecture_Woowa\payment)
2024-12-05T00:42:18.198+09:00  INFO 12740 --- [    Test worker] sa.service.ValidatorServiceTest          : No active profile set, falling back to 1 default profile: "default"
2024-12-05T00:42:18.938+09:00  INFO 12740 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-12-05T00:42:19.005+09:00  INFO 12740 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 54 ms. Found 1 JPA repository interface.
2024-12-05T00:42:19.584+09:00  INFO 12740 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-12-05T00:42:19.671+09:00  INFO 12740 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.2.Final
2024-12-05T00:42:19.719+09:00  INFO 12740 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-12-05T00:42:20.082+09:00  INFO 12740 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-12-05T00:42:20.120+09:00  INFO 12740 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-12-05T00:42:20.432+09:00  INFO 12740 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7793b55d
2024-12-05T00:42:20.437+09:00  INFO 12740 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-12-05T00:42:20.493+09:00  WARN 12740 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2024-12-05T00:42:20.495+09:00  WARN 12740 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2024-12-05T00:42:20.516+09:00  INFO 12740 --- [    Test worker] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.0
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2024-12-05T00:42:22.092+09:00  INFO 12740 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    alter table menu 
       drop 
       foreign key FK4sgenfcmk1jajhgctnkpn5erg
Hibernate: 
    alter table order_menu 
       drop 
       foreign key FK4oumkm265ypdtcndhueq1cv26
Hibernate: 
    alter table order_menu 
       drop 
       foreign key FKmw4iqpidcbvklykhbhxewx124
Hibernate: 
    alter table orders 
       drop 
       foreign key FK5n14sr4mswfdtaoiwj7rkt0mw
Hibernate: 
    alter table orders 
       drop 
       foreign key FK32ql8ubntj5uh44ph9659tiih
Hibernate: 
    drop table if exists account_transfers
Hibernate: 
    drop table if exists credit_cards
Hibernate: 
    drop table if exists menu
Hibernate: 
    drop table if exists order_menu
Hibernate: 
    drop table if exists orders
Hibernate: 
    drop table if exists payments
Hibernate: 
    drop table if exists store
Hibernate: 
    drop table if exists store_request_info
Hibernate: 
    drop table if exists users
Hibernate: 
    drop table if exists woowa_payments
Hibernate: 
    create table account_transfers (
        account_transfer_id bigint not null auto_increment,
        balance bigint not null,
        user_id bigint not null,
        account_number varchar(255),
        primary key (account_transfer_id)
    ) engine=InnoDB
Hibernate: 
    create table credit_cards (
        expiration_date date,
        credit_card_id bigint not null auto_increment,
        user_id bigint not null,
        bank_name varchar(255),
        card_number varchar(255),
        primary key (credit_card_id)
    ) engine=InnoDB
Hibernate: 
    create table menu (
        menu_price integer not null,
        menu_id bigint not null auto_increment,
        store_id bigint,
        menu_name varchar(255),
        primary key (menu_id)
    ) engine=InnoDB
Hibernate: 
    create table order_menu (
        count integer not null,
        menu_price integer not null,
        menu_id bigint,
        order_id bigint,
        order_menu_id bigint not null auto_increment,
        menu_name varchar(255),
        primary key (order_menu_id)
    ) engine=InnoDB
Hibernate: 
    create table orders (
        total_price integer not null,
        x float(53),
        y float(53),
        order_id bigint not null auto_increment,
        store_id bigint,
        user_id bigint,
        location_name varchar(255),
        order_status enum ('ACCEPT','CANCEL','DELIVERY','DENY','FINISH','PAYMENT_FAILED','PAYMENT_SUCCESS','WAIT'),
        primary key (order_id)
    ) engine=InnoDB
Hibernate: 
    create table payments (
        payment_method_type tinyint,
        total_price integer not null,
        payment_id bigint not null auto_increment,
        user_id bigint,
        payment_status enum ('ACCEPT','DENY','PAID','REFUND','WAIT'),
        primary key (payment_id)
    ) engine=InnoDB
Hibernate: 
    create table store (
        delivery_price integer not null,
        minimum_order_price integer not null,
        x float(53),
        y float(53),
        store_id bigint not null auto_increment,
        location_name varchar(255),
        store_name varchar(255),
        primary key (store_id)
    ) engine=InnoDB
Hibernate: 
    create table store_request_info (
        delivery_price integer not null,
        minimum_order_price integer not null,
        x float(53),
        y float(53),
        store_request_info_id bigint not null auto_increment,
        location_name varchar(255),
        store_name varchar(255),
        status enum ('ACCEPT','DENY','WAIT'),
        primary key (store_request_info_id)
    ) engine=InnoDB
Hibernate: 
    create table users (
        x float(53),
        y float(53),
        user_id bigint not null auto_increment,
        location_name varchar(255),
        user_name varchar(255),
        user_role enum ('CUSTOMER','MANAGER','STORE'),
        primary key (user_id)
    ) engine=InnoDB
Hibernate: 
    create table woowa_payments (
        balance bigint not null,
        user_id bigint not null,
        woowa_payment_id bigint not null auto_increment,
        password varchar(255),
        primary key (woowa_payment_id)
    ) engine=InnoDB
Hibernate: 
    alter table menu 
       add constraint FK4sgenfcmk1jajhgctnkpn5erg 
       foreign key (store_id) 
       references store (store_id)
Hibernate: 
    alter table order_menu 
       add constraint FK4oumkm265ypdtcndhueq1cv26 
       foreign key (menu_id) 
       references menu (menu_id)
Hibernate: 
    alter table order_menu 
       add constraint FKmw4iqpidcbvklykhbhxewx124 
       foreign key (order_id) 
       references orders (order_id)
Hibernate: 
    alter table orders 
       add constraint FK5n14sr4mswfdtaoiwj7rkt0mw 
       foreign key (store_id) 
       references store (store_id)
Hibernate: 
    alter table orders 
       add constraint FK32ql8ubntj5uh44ph9659tiih 
       foreign key (user_id) 
       references users (user_id)
2024-12-05T00:42:22.850+09:00  INFO 12740 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-12-05T00:42:23.426+09:00  WARN 12740 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-12-05T00:42:23.919+09:00  INFO 12740 --- [    Test worker] o.a.k.clients.consumer.ConsumerConfig    : ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-payment-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = payment
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metadata.recovery.strategy = none
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-12-05T00:42:23.966+09:00  INFO 12740 --- [    Test worker] o.a.k.c.t.i.KafkaMetricsCollector        : initializing Kafka metrics collector
2024-12-05T00:42:24.088+09:00  INFO 12740 --- [    Test worker] o.a.kafka.common.utils.AppInfoParser     : Kafka version: 3.8.1
2024-12-05T00:42:24.088+09:00  INFO 12740 --- [    Test worker] o.a.kafka.common.utils.AppInfoParser     : Kafka commitId: 70d6ff42debf7e17
2024-12-05T00:42:24.088+09:00  INFO 12740 --- [    Test worker] o.a.kafka.common.utils.AppInfoParser     : Kafka startTimeMs: 1733326944086
2024-12-05T00:42:24.094+09:00  INFO 12740 --- [    Test worker] o.a.k.c.c.internals.LegacyKafkaConsumer  : [Consumer clientId=consumer-payment-1, groupId=payment] Subscribed to topic(s): payment_request
2024-12-05T00:42:24.113+09:00  INFO 12740 --- [    Test worker] sa.service.ValidatorServiceTest          : Started ValidatorServiceTest in 6.329 seconds (process running for 7.688)
2024-12-05T00:42:24.414+09:00  INFO 12740 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-payment-1, groupId=payment] Node -1 disconnected.
2024-12-05T00:42:24.416+09:00  WARN 12740 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-payment-1, groupId=payment] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-12-05T00:42:24.417+09:00  WARN 12740 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-payment-1, groupId=payment] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-12-05T00:42:24.529+09:00  INFO 12740 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-payment-1, groupId=payment] Node -1 disconnected.
2024-12-05T00:42:24.529+09:00  WARN 12740 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-payment-1, groupId=payment] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-12-05T00:42:24.530+09:00  WARN 12740 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-payment-1, groupId=payment] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-12-05T00:42:24.648+09:00  INFO 12740 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-payment-1, groupId=payment] Node -1 disconnected.
2024-12-05T00:42:24.649+09:00  WARN 12740 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-payment-1, groupId=payment] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-12-05T00:42:24.649+09:00  WARN 12740 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-payment-1, groupId=payment] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-12-05T00:42:24.870+09:00  INFO 12740 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-payment-1, groupId=payment] Node -1 disconnected.
2024-12-05T00:42:24.871+09:00  WARN 12740 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-payment-1, groupId=payment] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-12-05T00:42:24.871+09:00  WARN 12740 --- [ntainer#0-0-C-1] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-payment-1, groupId=payment] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
Hibernate: 
    insert 
    into
        woowa_payments
        (user_id, password, balance) 
    values
        (?, ?, ?)
Hibernate: 
    select
        wp1_0.woowa_payment_id,
        wp1_0.balance,
        wp1_0.password,
        wp1_0.user_id 
    from
        woowa_payments wp1_0 
    where
        wp1_0.user_id=?
Hibernate: 
    select
        at1_0.account_transfer_id,
        at1_0.account_number,
        at1_0.balance,
        at1_0.user_id 
    from
        account_transfers at1_0 
    where
        at1_0.user_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
